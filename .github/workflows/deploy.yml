name: Deploy

on:
  push:
    branches:
      - master

jobs:
  terraform-setup:
    name: "Terraform Setup"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Terraform Config
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        run: terraform init

      - name: Setup Variable Files (HACKY)
        env:
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          AWS_EC2_PUBLIC_KEY: ${{ secrets.AWS_EC2_PUBLIC_KEY }}
        shell: bash
        run: cat >> github.auto.tfvars << EOF
          github_ssh_key = "$AWS_EC2_PUBLIC_KEY"
          database_password = "$DATABASE_PASSWORD"
          EOF

      - name: Terraform Apply
        run: terraform apply -auto-approve"

      - name: Get Server IP
        run: terraform output public_ip >> public_ip.txt

      - name: Upload Server IP
        uses: actions/upload-artifact@v2
        with:
          name: public_ip
          path: public_ip.txt

  deploy-build:
    name: Deploy to AWS
    needs: terraform-setup
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js v14.x
        uses: actions/setup-node@v1
        with:
          node-version: "14.x"

      - name: Install Dependencies
        run: |
          npm install -g yarn
          yarn install --frozen-lockfile

      - name: Build Task
        run: yarn build

      - name: Get Server IP
        uses: actions/download-artifact@v2
        with:
          name: public_ip

      - name: Set REMOTE_HOST
        run: echo "::set-env name=REMOTE_HOST::$(cat public_ip.txt)"

      - name: Deploy to Server
        uses: easingthemes/ssh-deploy@v2.1.4
        env:
          SSH_PRIVATE_KEY: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
          SOURCE: "."
          TARGET: "/data"
          REMOTE_USER: "ubuntu"
